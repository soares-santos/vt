README for venice, a mask utility program

V 2.01 

------------------------
Jean Coupon - Feb 2009
------------------------

Usage: venice -m mask.reg [OPTIONS]
       or venice -m mask.reg -cat file.cat [OPTIONS]
       or venice -m mask.reg -r [OPTIONS]

IMPORTANTE NOTICE: 0 means INSIDE the mask, 1 OUTSIDE

------------------------
DESCRIPTION
------------------------

Programs that reads a mask file (DS9 type) and a catalogue 
of objects and computes one of the following tasks:
1. Creates a pixelized mask.
2. Finds objects inside/outside a mask.
3. Generates a random catalogue of objects inside/outside a mask.

The program reads the mask file and checks if a point, giving its 
coordinates, is inside or outside the mask, i.e. inside or outside 
at least one polygon of the mask.
The method used to determine if a point is inside a polygon is to draw 
a line between the point and a second point (outside the polygon) and 
count how many times the line crosses the sides of the polygon. If the
number is odd, the object is inside, if the number is even, the point is 
outside.
Ref: [Press et al 2007, Numerical recipes in c++]

In order to improve the speed, the process is made in 2 times.
A first quick check is performed to know if the point is inside or 
outside the square drawn by the extrema of the polygon 
(less time consuming) and then the "cross line" test is made.

The typical time for a CFHTLS wide catalogue and its terapix mask
is about 5 seconds (200 000 objects in the catalogue and 1000 polygons 
in the mask).

For all the program, the convention used is 0 when the object 
is INSIDE the mask and 1 when the object is OUTSIDE.

------------------------
USAGE
------------------------

1. Creates a pixelized mask.

    venice -m mask.reg [OPTIONS]

For this task, don't add a catalogue in input (If you add a catalogue in 
input, e.g. -cat file.cat, the program will automatically switch 
to the task #2, see further for details). 
The mask file must be a "DS9 type" mask file (with the extension .reg).
(i.e.: "polygon(x1,y1,x2,y2,x3,y3)", see DS9 help for more details).

IMPORTANT: Only polygons of the mask will be taken into account.

The program writes the pixelized mask in an ASCII output file. 
0 when the center of the pixel is inside the mask.
1 when the center of the pixel is outside the mask.

Options

	-nx number: number of pixels in the x direction. Default = 512.
	-ny number: number of pixels in the y direction. Default = 512.
	-o outputfile: output file where the pixelized mask is written.
	 Default = mask.out.
	-xmin number, the minimum coordinate in the x direction.
	-xmax number, the maximum coordinate in the x direction.
	-ymin number, the minimum coordinate in the y direction.
	-ymax number, the maximum coordinate in the y direction.
	The default value for the coordinates limits are definied 
	by the mask limits. 

Example

How to create a pixelized (10 X 10 pixels) mask with a mask 
file named mask.reg and put the results in pixel_mask.out:

     venice -m mask.reg -nx 10 -ny 10 -o pixel_mask.out

The result in pixel_mask.out will look like this:

0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 
0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0 
0.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  0.0 
0.0  1.0  1.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0 
0.0  1.0  1.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0 
0.0  1.0  1.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0 
0.0  1.0  0.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0 
0.0  1.0  0.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0 
0.0  1.0  0.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0 
0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0 



2. Finds objects inside/outside a mask.

You have to provide a catalogue of objects with the same coordinate system 
as the mask file:

	venice -m mask.reg -cat file.cat [OPTIONS]

The program checks if the objects in the catalogue are inside or outside 
the mask. The output file contains the initial catalogue with an additionnal
column for the mask flag: 
The flag is 0 when the object is inside the mask and 1 when outside.

Options
	-f  [outside,inside,all], format of the catalogue. Default = outside.
	   outside means only objects OUTSIDE the mask are written 
	   in the output file with the format: x y.
	   inside means only objects INSIDE the mask are written.
	all means ALL objects are written in the catalogue with 
	   a flag 0 or 1 (resp. inside or outside) with the format: [line] flag.
	-xcol number: column number of the x coordinate. Default=1.
	-ycol number: column number of the y coordinate. Default=2.
	-o outputfile: output file where the catalogue and the flag 
	are written. Default = mask.out.
	-xmin number, the minimum coordinate in the x direction.
	-xmax number, the maximum coordinate in the x direction.
	-ymin number, the minimum coordinate in the y direction.
	-ymax number, the maximum coordinate in the y direction.

Example

How to create a new catalogue newcat.cat with a mask file named mask.reg 
and a catalogue oldcat.cat for which the coordinate column numbers are 
4 (x) and 5 (y):

     venice -m mask.reg -cat oldcat.cat -xcol 4 -ycol 5 -o newcat.cat


3. Generates a random catalogue of objects inside/outside a mask.

Given a mask file, the program generates a random catalogue and flag 
the objects if inside or outside the mask. 
The coordinates are drawn from a uniform distribution.

   venice -m mask.reg -r [OPTIONS]

Options

	-coord : cart or spher. spher allows to draw a uniform
	distribution on a sphere. The coordinates must be in degrees 
	ra=[0:360],dec=[-90.0:90.0].
	Default = cart.
	-o outputfile: output file where the catalogue is written. 
	Default = mask.out.
	-npart number: number of objects. Default = 1 000 000.
	-f  [outside,inside,all], format of the catalogue. Default = outside.
	   outside means only objects OUTSIDE the mask are written 
	   in the output file with the format: x y.
	   inside means only objects INSIDE the mask are written 
	   with the format:  x y.
	   all means ALL objects are written in the catalogue with 
	   a flag 0 or 1 (resp. inside or outside) with the format: x y flag.
	-xmin number, the minimum coordinate in the x direction.
	-xmax number, the maximum coordinate in the x direction.
	-ymin number, the minimum coordinate in the y direction.
	-ymax number, the maximum coordinate in the y direction.
	The default value for the coordinates limits are definied 
	by the mask limits. 
	If you don't provide a mask (so if you only want a random catalogue 
	with no mask), you have to define all of these values.
	
Example

How to create a random catalogue of 10 000 000 objects rancat.cat 
with a mask file named mask.reg that contains only objects outside the mask.
The number of objects in random.cat will depend on the size of the mask.
 
     venice -m mask.reg -r -f outside -npart 10000000 -o random.cat

How to create a random catalogue between 0.0 and 1.0 in both coordinates
with no mask.

    venice -r -xmin 0.0 -xmax 1.0 -ymin 0.0 -ymax 1.0

NB: to change the random seed. Before running the program, type:
  - for tcsh: setenv GSL_RNG_SEED `date +%s`
  - for bash: export GSL_RNG_SEED=`date +%s`
